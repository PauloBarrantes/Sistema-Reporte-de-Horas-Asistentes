<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gYcAwgLX5rgdwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEISURBVEhL
        vZbbEYIwEEXxQ0vALhitQyuxCfywBgvBRrQJP+xA/cBzmY2CE4Kv9czckexudhPIwyxFXddTtEQl2qGj
        qTLbAuUW/jp0mqANuqIhLkjFxtY9DYFzdEDvskczSxOHgBXSiD5FfVeWrguOmQV8i3J0Z4JhjDTFX6Fc
        j29CY92Y45ztN0bKV4bkOep7NSdUoG3T6iKbfIqJoZy5Cmgtx9DoChvECLWL6HlkPhXpm8lCAVrDfbQT
        hSIxWx+lgrQrUzwnfDW5qBSorT/EvYjQs9mGOP6lgPsrcv/I7svUd6PZKPyOCkHD97ATGPyO6wAOvwsn
        QIDflRkg0O/Sb0OnL/+2ZNkNGv719eMlof0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xAAAAABJRU5ErkJggg==
</value>
  </data>
</root>